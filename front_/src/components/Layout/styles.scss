@use '../../styles/vars' as v;
@use '../../styles/mixins' as mix;

@mixin container {
  background: #fff;
  box-shadow: 0 2px 4px rgba($color: #000, $alpha: .4);
  border-radius: 1rem;
}

@mixin items {
  padding: .75rem v.$nav-horizontal-padding;
  @include mix.flex-gap(2rem);
  position: relative;

  .item {
    width: v.$nav-item-width;
    border-radius: .5rem;
    display: flex;
    justify-content: center;
    position: relative;

    // &-active,
    &:hover {
      .link {
        .link-title {
          transform: translate(-50%, 0);
          opacity: 1;
          transition: .2s;
        }
      }
    }

    &-active {
      @extend .item;

      // set position of 'focus' based on active element (+8rem at each item)
      @for $i from 1 through 10 {
        &:nth-child(#{$i + 1})~.focus {
          transform: translateX($i * calc(v.$nav-item-width + 2rem));
        }
      }
    }

    // add separator between items
    &:not(li:last-of-type)::before {
      content: '';
      width: 1px;
      height: 80%;
      background: #888;
      position: absolute;
      inset: 10% auto auto calc(100% + 1rem);
    }

    &+.focus {
      width: v.$nav-item-width;
      background: #dbff73;
      border: 1px solid #888;
      border-radius: .5rem;
      position: absolute;
      inset: .75rem v.$nav-horizontal-padding;
      pointer-events: none;
      z-index: -1;
      transition: .4s;
    }

    .link {
      padding: .5rem;
      width: 100%;
      border-radius: .5rem;
      @include mix.flex-center;
      position: relative;

      &-title {
        padding: .5rem;
        width: fit-content;
        background: #3c3c3c;
        border-radius: .5rem;
        color: #fff;
        position: absolute;
        white-space: nowrap;
        transform: translate(-50%, .75rem);
        opacity: 0;
        pointer-events: none;
        transition: .3s;
      }
    }
  }
}

.header {
  padding: 0 1rem;
  width: calc(100% - v.$header-inset * 2);
  height: v.$header-height;
  @include container;
  display: flex;
  align-items: center;
  justify-content: space-between;
  position: fixed;
  inset: calc(v.$header-inset) auto auto calc(v.$header-inset);
  z-index: 2;

  &-title {
    font-size: 300%;

    span {
      transition: .4s;

      &:last-child {
        color: #1D8AB1;
      }
    }
  }

  &-items {
    @include items;

    .item {
      .link {
        &-title {
          inset: auto auto -2.5rem 50%;
        }
      }
    }
  }
}

.navbar {
  display: flex;
  justify-content: center;
  position: fixed;
  inset: auto 0 calc(1rem + v.$root-padding / 2);
  z-index: 2;

  &-items {
    @include container;
    @include items;
    @include mix.flex-gap(2rem);
    z-index: 1;

    .item {
      .link {
        &-title {
          inset: -2.5rem auto auto 50%;
        }
      }
    }
  }
}